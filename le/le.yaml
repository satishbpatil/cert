apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment-le
spec:
  selector:
    matchLabels:
      app: nginx-le
  replicas: 1 
  template:
    metadata:
      labels:
        app: nginx-le
    spec:
      containers:
      - name: nginx
        image: nginx:1.26.3
        ports:
        - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: le-service
spec:
  selector:
    app: nginx-le
  ports:
  - name: le-port
    protocol: TCP
    port: 80
    targetPort: 80
    
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: le-ingress
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: external-nginx
  rules:
    - host: le.patilsb.people.aws.dev
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: le-service
                port:
                  number: 80
  tls:
    - hosts:
        - le.patilsb.people.aws.dev
      secretName: le-patilsb-people-aws-dev
    
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: acm-ingress
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:257368650468:certificate/baa77ebc-41e7-4fd5-93d5-1315a624400d
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
#   labels:
#     app: acm-ingress
# spec:
#   ingressClassName: alb
#   rules:
#     - host: acm.patilsb.people.aws.dev
#       http:
#         paths:
#         - path: /
#           pathType: Prefix
#           backend:
#             service:
#               name: acm-service
#               port:
#                 number: 80
